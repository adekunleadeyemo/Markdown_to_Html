package miniproject.dsl.markdown.tests

import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.extensions.InjectionExtension
import org.eclipse.xtext.testing.util.ParseHelper
import org.junit.jupiter.api.Assertions
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.extension.ExtendWith

import com.google.inject.Inject

import miniproject.dsl.markdown.markdownDSL.Model

@ExtendWith(InjectionExtension)
@InjectWith(MarkdownDSLInjectorProvider)

class MarkdownDSLParsingTest2 {

	@Inject
	ParseHelper<Model> parseHelper
	
	@Test
	void testBasic() {
		def result = parseHelper.parse("""# Agile Cloud Automationâ€‹ This is a contemporary field of computer science, 
which involves partially of fully automating the programming aspect of software development process within a particular domain 
by generating low code or no code development platforms which comprises of a DSL and a code generator. 
The process of developing these low code platforms, most often are practiced using""")
		Assertions.assertNotNull(result)
		def errors = result.eResource().errors
		Assertions.assertTrue(errors.isEmpty(), """Unexpected errors: ${errors.join(", ")}""")
	}

	
}
